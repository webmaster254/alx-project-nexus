# Generated by Django 4.2.23 on 2025-08-06 17:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("jobs", "0002_job"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ApplicationStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Review"),
                            ("reviewed", "Under Review"),
                            ("accepted", "Accepted"),
                            ("rejected", "Rejected"),
                            ("withdrawn", "Withdrawn"),
                        ],
                        help_text="Status name (pending, reviewed, accepted, rejected, withdrawn)",
                        max_length=20,
                        unique=True,
                    ),
                ),
                (
                    "display_name",
                    models.CharField(
                        help_text="Human-readable status name", max_length=50
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Description of what this status means"
                    ),
                ),
                (
                    "is_final",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this status represents a final decision",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Application Status",
                "verbose_name_plural": "Application Statuses",
                "db_table": "application_status",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Application",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cover_letter",
                    models.TextField(
                        blank=True,
                        help_text="Cover letter text submitted with the application",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Internal notes about the application (admin only)",
                    ),
                ),
                (
                    "applied_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="When the application was submitted",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="When the application was last updated"
                    ),
                ),
                (
                    "reviewed_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When the application was first reviewed",
                        null=True,
                    ),
                ),
                (
                    "job",
                    models.ForeignKey(
                        help_text="Job being applied for",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="applications",
                        to="jobs.job",
                    ),
                ),
                (
                    "reviewed_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="Admin user who reviewed the application",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reviewed_applications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "status",
                    models.ForeignKey(
                        help_text="Current status of the application",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="applications",
                        to="applications.applicationstatus",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User who submitted the application",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="applications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Application",
                "verbose_name_plural": "Applications",
                "db_table": "application",
                "ordering": ["-applied_at"],
            },
        ),
        migrations.CreateModel(
            name="Document",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("resume", "Resume/CV"),
                            ("cover_letter", "Cover Letter"),
                            ("portfolio", "Portfolio"),
                            ("certificate", "Certificate"),
                            ("other", "Other"),
                        ],
                        help_text="Type of document",
                        max_length=20,
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Document title or name", max_length=200
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        help_text="Uploaded document file",
                        upload_to="application_documents/",
                    ),
                ),
                (
                    "file_size",
                    models.PositiveIntegerField(
                        blank=True, help_text="File size in bytes", null=True
                    ),
                ),
                (
                    "content_type",
                    models.CharField(
                        blank=True,
                        help_text="MIME type of the uploaded file",
                        max_length=100,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Optional description of the document"
                    ),
                ),
                (
                    "uploaded_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When the document was uploaded"
                    ),
                ),
                (
                    "application",
                    models.ForeignKey(
                        help_text="Application this document belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documents",
                        to="applications.application",
                    ),
                ),
            ],
            options={
                "verbose_name": "Application Document",
                "verbose_name_plural": "Application Documents",
                "db_table": "application_document",
                "ordering": ["-uploaded_at"],
                "indexes": [
                    models.Index(
                        fields=["application", "document_type"],
                        name="application_applica_c27efe_idx",
                    ),
                    models.Index(
                        fields=["uploaded_at"], name="application_uploade_e037ba_idx"
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="application",
            index=models.Index(
                fields=["user", "status"], name="application_user_id_06c97c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="application",
            index=models.Index(
                fields=["job", "status"], name="application_job_id_dfe25c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="application",
            index=models.Index(
                fields=["applied_at"], name="application_applied_6434a1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="application",
            index=models.Index(
                fields=["status", "applied_at"], name="application_status__79e556_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="application",
            unique_together={("user", "job")},
        ),
    ]
