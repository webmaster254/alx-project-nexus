# Generated by Django 4.2.23 on 2025-08-05 22:11

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("authentication", "0001_initial"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="user",
            options={"verbose_name": "User", "verbose_name_plural": "Users"},
        ),
        migrations.AlterField(
            model_name="user",
            name="email",
            field=models.EmailField(
                help_text="Email address used for authentication",
                max_length=254,
                unique=True,
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="is_admin",
            field=models.BooleanField(
                default=False,
                help_text="Designates whether the user has admin privileges",
            ),
        ),
        migrations.AlterModelTable(
            name="user",
            table="auth_user",
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        help_text="Contact phone number",
                        max_length=17,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                    ),
                ),
                (
                    "bio",
                    models.TextField(
                        blank=True,
                        help_text="Brief professional biography",
                        max_length=500,
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True,
                        help_text="Current location (city, state/country)",
                        max_length=100,
                    ),
                ),
                (
                    "website",
                    models.URLField(
                        blank=True, help_text="Personal or professional website URL"
                    ),
                ),
                (
                    "linkedin_url",
                    models.URLField(blank=True, help_text="LinkedIn profile URL"),
                ),
                (
                    "github_url",
                    models.URLField(blank=True, help_text="GitHub profile URL"),
                ),
                (
                    "resume",
                    models.FileField(
                        blank=True,
                        help_text="Upload resume file (PDF preferred)",
                        null=True,
                        upload_to="resumes/",
                    ),
                ),
                (
                    "skills",
                    models.TextField(
                        blank=True, help_text="Comma-separated list of skills"
                    ),
                ),
                (
                    "experience_years",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Years of professional experience",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        help_text="Associated user account",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Profile",
                "verbose_name_plural": "User Profiles",
                "db_table": "user_profile",
            },
        ),
    ]
